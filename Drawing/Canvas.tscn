[gd_scene load_steps=9 format=2]

[ext_resource path="res://Drawing/Canvas.gd" type="Script" id=1]
[ext_resource path="res://Drawing/palette_render_material.tres" type="Material" id=2]
[ext_resource path="res://Drawing/SaverLoader.gd" type="Script" id=4]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D noise_texture;
uniform int bands = 6;

vec2 random(vec2 uv) {
	return vec2(fract(sin(dot(uv.xy,
		vec2(12.9898,78.233))) * 43758.5453123));
}

vec2 voronoi(vec2 uv, float columns, float rows) {
	
	vec2 index_uv = floor(vec2(uv.x * columns, uv.y * rows));
	vec2 fract_uv = fract(vec2(uv.x * columns, uv.y * rows));
	
	float minimum_dist = 1.0;  
	vec2 minimum_point;

	for (int y= -1; y <= 1; y++) {
		for (int x= -1; x <= 1; x++) {
			vec2 neighbor = vec2(float(x),float(y));
			vec2 point = random(index_uv + neighbor);

			vec2 diff = neighbor + point - fract_uv;
			float dist = length(diff);
			
			if(dist < minimum_dist) {
				minimum_dist = dist;
				minimum_point = point;
			}
		}
	}
	return minimum_point;
}

float get_band(vec2 uv) {
	float val = texture(noise_texture, uv).r;
	val *= float(bands);
	val = round(val);
	val /= float(bands);
	return val;
}

void fragment() {
	float val = get_band(SCREEN_UV+TIME*vec2(1.0, 0.0)*0.2);
	val *= get_band(SCREEN_UV+TIME*vec2(-1.0, 0.0)*0.3)*2.0;
	val *= get_band(SCREEN_UV+TIME*vec2(0.0, -1.0)*0.4)*1.5;
	val *= get_band(SCREEN_UV+TIME*vec2(0.0, 1.0)*0.5)*1.5;
	val *= 2.0;
	COLOR = vec4(val);
	COLOR.b = 1.0;
}"

[sub_resource type="OpenSimplexNoise" id=3]

[sub_resource type="NoiseTexture" id=4]
width = 256
height = 256
seamless = true
noise = SubResource( 3 )

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/bands = 6
shader_param/noise_texture = SubResource( 4 )

[sub_resource type="ViewportTexture" id=5]
flags = 1
viewport_path = NodePath("Layers")

[node name="Canvas" type="Node2D"]
script = ExtResource( 1 )

[node name="Layers" type="Viewport" parent="."]
size = Vector2( 2048, 2048 )
transparent_bg = true
usage = 0
render_target_v_flip = true

[node name="shader_debug_demo" type="Node2D" parent="Layers"]
visible = false

[node name="Polygon2D" type="Polygon2D" parent="Layers/shader_debug_demo"]
color = Color( 0, 0.494118, 1, 1 )
polygon = PoolVector2Array( 786, 309, 517, 787, 859, 1019, 995, 850, 820, 792, 1167, 680, 1333, 476, 1058, 247, 947, 173 )

[node name="Polygon2D2" type="Polygon2D" parent="Layers/shader_debug_demo"]
color = Color( 0.384314, 0.415686, 1, 1 )
polygon = PoolVector2Array( 1008, 671, 662, 746, 795, 908, 873, 829, 1032, 790, 1167, 680, 1333, 476, 1341, 308, 1164, 281 )

[node name="Polygon2D3" type="Polygon2D" parent="Layers/shader_debug_demo"]
color = Color( 0.611765, 0.466667, 1, 1 )
polygon = PoolVector2Array( 1008, 671, 1001, 695, 775, 753, 983, 1021, 868, 793, 970, 752, 1167, 680, 1041, 492, 1341, 308, 965, 446, 1022, 664, 1020, 661, 1016, 658, 1012, 657, 1008, 657, 1005, 658, 982, 676, 971, 680, 984, 691, 994, 676, 1000, 667, 1012, 661, 1014, 663, 1014, 667, 1012, 670, 1010, 671 )

[node name="SaverLoader" type="Node2D" parent="."]
script = ExtResource( 4 )

[node name="RemovedStack" type="Node2D" parent="."]
visible = false

[node name="Polygon2D" type="Polygon2D" parent="."]
material = SubResource( 2 )
invert_enable = true
invert_border = 21.4
polygon = PoolVector2Array( 0, 0, 0, 2048, 2048, 2048, 2048, 0 )

[node name="ViewMask" type="Sprite" parent="."]
material = ExtResource( 2 )
position = Vector2( 1024, 1024 )
z_index = 20
texture = SubResource( 5 )
